version: "2.1"

defaults:
  only-tag-filter: &filter-only-tagged
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /.*/
  only-main-filter: &filter-only-main
    filters:
      branches:
        only: /main/
      tags:
        ignore: /.*/

executors:
  python-3:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/source

workflows:
  version: "2"
  build-workflow:  # PRs and merges into master
    jobs:
      - create-workspace
      - test:
          requires:
            - create-workspace
      - upload-coverage:
          <<: *filter-only-main
          requires:
            - test
  release-workflow:  # uploads tags
    jobs:
      - create-workspace:
          <<: *filter-only-tagged
      - upload-python:
          <<: *filter-only-tagged
          requires:
            - create-workspace
          context: org-global
      - upload-docs:
          <<: *filter-only-tagged
          requires:
            - create-workspace

jobs:
  create-workspace:  # create environment, install requirements
    executor: python-3
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - restore_cache:  # if we have a cache, use it
          keys:
            - environment-cache-{{ checksum "setup.py" }}
            - environment-cache-
      - run:
          name: Install depdendencies
          command: |
            python -mvenv ~/workspace/env
            . ~/workspace/env/bin/activate
            pip install -e '.[dev]'
      - save_cache:
          paths:
            - ~/workspace/env
          key: environment-cache-{{ checksum "setup.py" }}
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - ./env

  test:  # run tests with coverage enabled
    executor: python-3
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Run tests
          command: |
            . ~/workspace/env/bin/activate
            mkdir -p build/reports
            nosetests \
              --with-coverage --cover-xml --cover-xml-file build/reports/coverage.xml \
              --with-xunit --xunit-file build/reports/junit.xml
            cp .coverage ~/workspace
      - store_test_results:
          path: build/reports
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - .coverage
      - store_artifacts:
          path: build/reports
          destination: build-reports

  upload-coverage:
    executor: python-3
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Upload coverage
          command: |
            . ~/workspace/env/bin/activate
            cp ~/workspace/.coverage .
            pip install coveralls
            coveralls

  upload-docs:
    executor: python-3
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Upload documentation
          command: |
            . ~/workspace/env/bin/activate
            ./setup.py build_sphinx  # ensure that it can be built
            curl --request POST -d "token=$READTHEDOCS_TOKEN" -d 'branches=main' \
              --header 'Email-Address: daveshawley+rtd@gmail.com' \
              https://readthedocs.org/api/v2/webhook/tornado-problem-details/80398/

  upload-python:
    executor: python-3
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Build and upload python package
          command: |
            . ~/workspace/env/bin/activate
            ./setup.py sdist bdist_wheel
            twine check dist/*
            twine upload dist/*
